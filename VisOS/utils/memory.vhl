public uint MEM_IndexOf(uint source, uint start, uint length, uint num)
{
	uint i = start;
	while(i < length)
	{
		if(source[i] == num)
		{
			return i;
		}
		i++
	} 

	return i;
}

public uint MEM_FirstIndex(uint source, uint length, uint num)
{
	return MEM_IndexOf(source, 0, length, num);
}

public uint MEM_Compare(uint source, uint length, uint destination)
{	
	uint i = length;
	while(i)
	{
		i--;
		uint tmpdst = destination[i];
		if(tmpdst != source[i])
		{	
			return 0;
		}
	}
	return 1;
}


public void MEM_Copy(uint source, uint length, uint destination)
{
	uint i = length;
	while(i)
	{
		i--;
		uint temp = source[i];
		destination[i] = temp;
	}
	return;
}

public void MEM_Set(uint source, uint length, uint value)
{
	uint i = length;
	while(i)
	{
		i--;
		source[i] = value;
	}
	return;
}
