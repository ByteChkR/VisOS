#include "../../../VisOS.Driver/VisOS.TestDevice/test_device.vhl"


string(test_if_if_else_if_v, "IF_IF_ELSE_IF_V_Test");
string(test_if_if_else_if_c, "IF_IF_ELSE_IF_C_Test");
string(test_if_if_else_if_vc, "IF_IF_ELSE_IF_VC_Test");
string(test_if_if_else_if_cv, "IF_IF_ELSE_IF_CV_Test");
string(test_if_if_else_if_vv, "IF_IF_ELSE_IF_VV_Test");
string(test_if_if_else_if_cc, "IF_IF_ELSE_IF_CC_Test");

string(test_first_eval_fail, "First if Triggered but should be else.");
string(test_second_eval_fail, "Second if Triggered but should be else.");
string(test_fallthrough_fail, "The Test did not enter the If blocks at all.");

private void TestIfIfElseIf_V()
{
	BeginTest(ptr_of(test_if_if_else_if_v), size_of(test_if_if_else_if_v));
	var a = 0;
	var b = 1;
	if(a)
	{
		FailTest(ptr_of(test_first_eval_fail), size_of(test_first_eval_fail));
		return;
	}
	else if(!b)
	{
		FailTest(ptr_of(test_second_eval_fail), size_of(test_second_eval_fail));
		return;
	}
	else
	{
		PassTest();
		return;
	}
	
	FailTest(ptr_of(test_fallthrough_fail), size_of(test_fallthrough_fail));
	return;
}


private void TestIfIfElseIf_C()
{
	BeginTest(ptr_of(test_if_if_else_if_c), size_of(test_if_if_else_if_c));
	var b = 1;
	if(0)
	{
		FailTest(ptr_of(test_first_eval_fail), size_of(test_first_eval_fail));
		return;
	}
	else if(!b)
	{
		FailTest(ptr_of(test_second_eval_fail), size_of(test_second_eval_fail));
		return;
	}
	else
	{
		PassTest();
		return;
	}
	
	FailTest(ptr_of(test_fallthrough_fail), size_of(test_fallthrough_fail));
	return;
}

private void TestIfIfElseIf_VC()
{
	BeginTest(ptr_of(test_if_if_else_if_vc), size_of(test_if_if_else_if_vc));
	var a = 0;
	var b = 1;
	if(a == 1)
	{
		FailTest(ptr_of(test_first_eval_fail), size_of(test_first_eval_fail));
		return;
	}
	else if(!b)
	{
		FailTest(ptr_of(test_second_eval_fail), size_of(test_second_eval_fail));
		return;
	}
	else
	{
		PassTest();
		return;
	}
	
	FailTest(ptr_of(test_fallthrough_fail), size_of(test_fallthrough_fail));
	return;
}


private void TestIfIfElseIf_CV()
{
	BeginTest(ptr_of(test_if_if_else_if_cv), size_of(test_if_if_else_if_cv));
	var a = 0;
	var b = 1;
	if(1 == a)
	{
		FailTest(ptr_of(test_first_eval_fail), size_of(test_first_eval_fail));
		return;
	}
	else if(!b)
	{
		FailTest(ptr_of(test_second_eval_fail), size_of(test_second_eval_fail));
		return;
	}
	else
	{
		PassTest();
		return;
	}
	
	FailTest(ptr_of(test_fallthrough_fail), size_of(test_fallthrough_fail));
	return;
}


private void TestIfIfElseIf_CC()
{
	BeginTest(ptr_of(test_if_if_else_if_cc), size_of(test_if_if_else_if_cc));
	var b = 1;
	if(0 == 1)
	{
		FailTest(ptr_of(test_first_eval_fail), size_of(test_first_eval_fail));
		return;
	}
	else if(!b)
	{
		FailTest(ptr_of(test_second_eval_fail), size_of(test_second_eval_fail));
		return;
	}
	else
	{
		PassTest();
		return;
	}
	
	FailTest(ptr_of(test_fallthrough_fail), size_of(test_fallthrough_fail));
	return;
}


private void TestIfIfElseIf_VV()
{
	BeginTest(ptr_of(test_if_if_else_if_vv), size_of(test_if_if_else_if_vv));

	var a = 0;
	var b = 1;
	var c = 1;
	
	if(a == b)
	{
		FailTest(ptr_of(test_first_eval_fail), size_of(test_first_eval_fail));
		return;
	}
	else if(!b)
	{
		FailTest(ptr_of(test_second_eval_fail), size_of(test_second_eval_fail));
		return;
	}
	else
	{
		PassTest();
		return;
	}
	
	FailTest(ptr_of(test_fallthrough_fail), size_of(test_fallthrough_fail));
	return;
}

public void RunIfElseIfElseTests()
{
	TestIfIfElseIf_V();
	TestIfIfElseIf_C();
	TestIfIfElseIf_VC();
	TestIfIfElseIf_CV();
	TestIfIfElseIf_VV();
	TestIfIfElseIf_CC();
	return;
}

RunIfElseIfElseTests();