#include "VisOS.Driver/hfs.vhl"
#include "VisOS.Driver/cout.vhl"

//The Boot Image to Load
string(bootimage, "../VisOS/Core.vbin"); //Path to Boot Image

//Boot Loader Strings
string(ldr_version, "v0.1");
string(ldr_name, "BootLoader");
string(DEBUG_TAG, "[BLDR] ");


string(txt_pre_load, "Preparing to load Image: ");
string(txt_loading, "Loading");
string(txt_bytes, "Bytes");
string(txt_complete, "Complete");
string(txt_error, "Error: File not Found");
string(txt_starting, "Starting Image...");

private void PrintHeader()
{
	COUT_WriteString(&DEBUG_TAG, size_of(DEBUG_TAG));
	COUT_WriteString(&ldr_name, size_of(ldr_name));
	COUT_Write(0x20);
	COUT_WriteLine( &ldr_version, size_of(ldr_version));
	return;
}

private void WritePreLoadText()
{
	COUT_WriteString(&DEBUG_TAG, size_of(DEBUG_TAG));
	COUT_WriteString( &txt_pre_load, size_of(txt_pre_load));
	COUT_WriteLine( &bootimage, size_of(bootimage));
	return;
}

private var GetSize()
{
	return HFS_GetFileSize( &bootimage, size_of(bootimage));
}

private var LoadImage()
{
	WritePreLoadText();
	var size = GetSize();
	COUT_WriteString(&DEBUG_TAG, size_of(DEBUG_TAG));
	COUT_WriteString( &txt_loading , size_of(txt_loading));
	COUT_Write(0x20);
	COUT_WriteNumber(size * 4);
	COUT_Write(0x20);
	COUT_WriteLine( &txt_bytes, size_of(txt_bytes));

	var entryPtr = HFS_LoadBinaryV1(&bootimage, size_of(bootimage));
	
	COUT_WriteString(&DEBUG_TAG, size_of(DEBUG_TAG));
	COUT_WriteString( &txt_loading, size_of(txt_loading));
	COUT_Write(0x20);
	COUT_WriteLine(&txt_complete, size_of(txt_complete));
	return entryPtr;
}

private void Entry()
{
	PrintHeader();
	var exists = HFS_FileExists( &bootimage, size_of(bootimage));
	if(exists)
	{
		var ptr = LoadImage();
		COUT_WriteString(&DEBUG_TAG, size_of(DEBUG_TAG));
		COUT_WriteLine( &txt_starting, size_of(txt_starting));
		ptr();
		return;
	}
	COUT_WriteString(&DEBUG_TAG, size_of(DEBUG_TAG));
	COUT_WriteLine( txt_error, size_of(txt_error));
	return;
}


Entry();
