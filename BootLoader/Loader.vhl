#include "VisOS.Driver/hfs.vhl"
#include "VisOS.Driver/cout.vhl"
#include "VisOS.Driver/cmgr.vhl"
#import "vasm-bridge BRK"

//The Boot Image to Load
private static string bootimage = "../VisOS/Core.vbin";

//Boot Loader Strings

private static string ldr_version = "v0.1";
private static string ldr_name = "BootLoader";
private static string DEBUG_TAG = "[BLDR] ";

private static string txt_pre_load = "Preparing to load Image: ";
private static string txt_loading = "Loading";
private static string txt_bytes= "Bytes";
private static string txt_complete= "Complete";
private static string txt_error= "Error: File not Found";
private static string txt_starting= "Starting Image...";

private void PrintHeader()
{
	COUT_WriteString(&DEBUG_TAG, size_of(DEBUG_TAG));
	COUT_WriteString(&ldr_name, size_of(ldr_name));
	COUT_Write(0x20);
	COUT_WriteLine( &ldr_version, size_of(ldr_version));
	return;
}

private void WritePreLoadText()
{
	COUT_WriteString(&DEBUG_TAG, size_of(DEBUG_TAG));
	COUT_WriteString( &txt_pre_load, size_of(txt_pre_load));
	COUT_WriteLine( &bootimage, size_of(bootimage));
	return;
}

private var GetSize()
{
	return HFS_GetFileSize( &bootimage, size_of(bootimage));
}

private var LoadImage()
{
	WritePreLoadText();
	var size = GetSize();
	COUT_WriteString(&DEBUG_TAG, size_of(DEBUG_TAG));
	COUT_WriteString( &txt_loading , size_of(txt_loading));
	COUT_Write(0x20);
	COUT_WriteNumber(size * 4);
	COUT_Write(0x20);
	COUT_WriteLine( &txt_bytes, size_of(txt_bytes));

	HFS_LoadSymbols(&bootimage, size_of(bootimage));
	var entryPtr = HFS_LoadBinaryV1(&bootimage, size_of(bootimage));
	
	COUT_WriteString(&DEBUG_TAG, size_of(DEBUG_TAG));
	COUT_WriteString( &txt_loading, size_of(txt_loading));
	COUT_Write(0x20);
	COUT_WriteLine(&txt_complete, size_of(txt_complete));
	return entryPtr;
}

private void Entry()
{
	CMGR_SetForeColor(11); //Orange
	PrintHeader();
	var exists = HFS_FileExists( &bootimage, size_of(bootimage));
	if(exists)
	{
		var ptr = LoadImage();
		COUT_WriteString(&DEBUG_TAG, size_of(DEBUG_TAG));
		COUT_WriteLine( &txt_starting, size_of(txt_starting));


		CMGR_SetForeColor(10); //Orange
		ptr();
		return;
	}
	CMGR_SetForeColor(12); //Red
	COUT_WriteString(&DEBUG_TAG, size_of(DEBUG_TAG));
	COUT_WriteLine( &txt_error, size_of(txt_error));
	interrupt(1);
	return;
}


Entry();
