#include "../VisOS.Driver/test_device.vhl"


private static string test_if_else_if_v = "IF_ELSE_IF_V_Test";
private static string test_if_else_if_c = "IF_ELSE_IF_C_Test";
private static string test_if_else_if_vc = "IF_ELSE_IF_VC_Test";
private static string test_if_else_if_cv = "IF_ELSE_IF_CV_Test";
private static string test_if_else_if_vv = "IF_ELSE_IF_VV_Test";
private static string test_if_else_if_cc = "IF_ELSE_IF_CC_Test";

private static string test_eval_fail = "Evaluation is wrong.";

private static void TestIfElseIf_V()
{
	Tests.Begin(ptr_of(test_if_else_if_v), size_of(test_if_else_if_v));
	uint a = 0;
	uint b = 1;
	if(a)
	{
		Tests.Fail(ptr_of(test_eval_fail), size_of(test_eval_fail));
		return;
	}
	else if(b)
	{
		Tests.Pass();
		return;
	}
	Tests.Fail(ptr_of(test_eval_fail), size_of(test_eval_fail));
	return;
}


private static void TestIfElseIf_C()
{
	Tests.Begin(ptr_of(test_if_else_if_c), size_of(test_if_else_if_c));
	uint b = 1;
	if(0)
	{
		Tests.Fail(ptr_of(test_eval_fail), size_of(test_eval_fail));
		return;
	}
	else if(b)
	{
		Tests.Pass();
		return;
	}
	Tests.Fail(ptr_of(test_eval_fail), size_of(test_eval_fail));
	return;
}

private static void TestIfElseIf_VC()
{
	Tests.Begin(ptr_of(test_if_else_if_vc), size_of(test_if_else_if_vc));
	uint a = 0;
	uint b = 1;
	if(a == 1)
	{
		Tests.Fail(ptr_of(test_eval_fail), size_of(test_eval_fail));
		return;
	}
	else if(b)
	{
		Tests.Pass();
		return;
	}
	Tests.Fail(ptr_of(test_eval_fail), size_of(test_eval_fail));
	return;
}


private static void TestIfElseIf_CV()
{
	Tests.Begin(ptr_of(test_if_else_if_cv), size_of(test_if_else_if_cv));
	uint a = 0;
	uint b = 1;
	if(1 == a)
	{
		Tests.Fail(ptr_of(test_eval_fail), size_of(test_eval_fail));
		return;
	}
	else if(b)
	{
		Tests.Pass();
		return;
	}
	Tests.Fail(ptr_of(test_eval_fail), size_of(test_eval_fail));
	return;
}


private static void TestIfElseIf_CC()
{
	Tests.Begin(ptr_of(test_if_else_if_cc), size_of(test_if_else_if_cc));
	uint b = 1;
	if(0 == 1)
	{
		Tests.Fail(ptr_of(test_eval_fail), size_of(test_eval_fail));
		return;
	}
	else if(b)
	{
		Tests.Pass();
		return;
	}
	Tests.Fail(ptr_of(test_eval_fail), size_of(test_eval_fail));
	return;
}


private static void TestIfElseIf_VV()
{
	Tests.Begin(ptr_of(test_if_else_if_vv), size_of(test_if_else_if_vv));

	uint a = 0;
	uint b = 1;
	uint c = 1;
	
	if(a == b)
	{
		Tests.Fail(ptr_of(test_eval_fail), size_of(test_eval_fail));
		return;
	}
	else if(b)
	{
		Tests.Pass();
		return;
	}
	Tests.Fail(ptr_of(test_eval_fail), size_of(test_eval_fail));
	return;
}

public static void RunIfElseIfTests()
{
	TestIfElseIf_V();
	TestIfElseIf_C();
	TestIfElseIf_VC();
	TestIfElseIf_CV();
	TestIfElseIf_VV();
	TestIfElseIf_CC();
	return;
}

RunIfElseIfTests();