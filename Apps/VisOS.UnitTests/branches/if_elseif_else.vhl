#include "../VisOS.Driver/tests/test_device.vhl"


private static string test_if_if_else_if_v="IF_IF_ELSE_IF_V_Test";
private static string test_if_if_else_if_c="IF_IF_ELSE_IF_C_Test";
private static string test_if_if_else_if_vc="IF_IF_ELSE_IF_VC_Test";
private static string test_if_if_else_if_cv="IF_IF_ELSE_IF_CV_Test";
private static string test_if_if_else_if_vv="IF_IF_ELSE_IF_VV_Test";
private static string test_if_if_else_if_cc="IF_IF_ELSE_IF_CC_Test";

private static string test_first_eval_fail="First if Triggered but should be else.";
private static string test_second_eval_fail="Second if Triggered but should be else.";
private static string test_fallthrough_fail="The Test did not enter the If blocks at all.";

private static void TestIfIfElseIf_V()
{
	Tests.Begin(ptr_of(test_if_if_else_if_v), size_of(test_if_if_else_if_v));
	uint a = 0;
	uint b = 1;
	if(a)
	{
		Tests.Fail(ptr_of(test_first_eval_fail), size_of(test_first_eval_fail));
		return;
	}
	else if(!b)
	{
		Tests.Fail(ptr_of(test_second_eval_fail), size_of(test_second_eval_fail));
		return;
	}
	else
	{
		Tests.Pass();
		return;
	}
	
	Tests.Fail(ptr_of(test_fallthrough_fail), size_of(test_fallthrough_fail));
	return;
}


private static void TestIfIfElseIf_C()
{
	Tests.Begin(ptr_of(test_if_if_else_if_c), size_of(test_if_if_else_if_c));
	uint b = 1;
	if(0)
	{
		Tests.Fail(ptr_of(test_first_eval_fail), size_of(test_first_eval_fail));
		return;
	}
	else if(!b)
	{
		Tests.Fail(ptr_of(test_second_eval_fail), size_of(test_second_eval_fail));
		return;
	}
	else
	{
		Tests.Pass();
		return;
	}
	
	Tests.Fail(ptr_of(test_fallthrough_fail), size_of(test_fallthrough_fail));
	return;
}

private static void TestIfIfElseIf_VC()
{
	Tests.Begin(ptr_of(test_if_if_else_if_vc), size_of(test_if_if_else_if_vc));
	uint a = 0;
	uint b = 1;
	if(a == 1)
	{
		Tests.Fail(ptr_of(test_first_eval_fail), size_of(test_first_eval_fail));
		return;
	}
	else if(!b)
	{
		Tests.Fail(ptr_of(test_second_eval_fail), size_of(test_second_eval_fail));
		return;
	}
	else
	{
		Tests.Pass();
		return;
	}
	
	Tests.Fail(ptr_of(test_fallthrough_fail), size_of(test_fallthrough_fail));
	return;
}


private static void TestIfIfElseIf_CV()
{
	Tests.Begin(ptr_of(test_if_if_else_if_cv), size_of(test_if_if_else_if_cv));
	uint a = 0;
	uint b = 1;
	if(1 == a)
	{
		Tests.Fail(ptr_of(test_first_eval_fail), size_of(test_first_eval_fail));
		return;
	}
	else if(!b)
	{
		Tests.Fail(ptr_of(test_second_eval_fail), size_of(test_second_eval_fail));
		return;
	}
	else
	{
		Tests.Pass();
		return;
	}
	
	Tests.Fail(ptr_of(test_fallthrough_fail), size_of(test_fallthrough_fail));
	return;
}


private static void TestIfIfElseIf_CC()
{
	Tests.Begin(ptr_of(test_if_if_else_if_cc), size_of(test_if_if_else_if_cc));
	uint b = 1;
	if(0 == 1)
	{
		Tests.Fail(ptr_of(test_first_eval_fail), size_of(test_first_eval_fail));
		return;
	}
	else if(!b)
	{
		Tests.Fail(ptr_of(test_second_eval_fail), size_of(test_second_eval_fail));
		return;
	}
	else
	{
		Tests.Pass();
		return;
	}
	
	Tests.Fail(ptr_of(test_fallthrough_fail), size_of(test_fallthrough_fail));
	return;
}


private static void TestIfIfElseIf_VV()
{
	Tests.Begin(ptr_of(test_if_if_else_if_vv), size_of(test_if_if_else_if_vv));

	uint a = 0;
	uint b = 1;
	uint c = 1;
	
	if(a == b)
	{
		Tests.Fail(ptr_of(test_first_eval_fail), size_of(test_first_eval_fail));
		return;
	}
	else if(!b)
	{
		Tests.Fail(ptr_of(test_second_eval_fail), size_of(test_second_eval_fail));
		return;
	}
	else
	{
		Tests.Pass();
		return;
	}
	
	Tests.Fail(ptr_of(test_fallthrough_fail), size_of(test_fallthrough_fail));
	return;
}

public static void RunIfElseIfElseTests()
{
	TestIfIfElseIf_V();
	TestIfIfElseIf_C();
	TestIfIfElseIf_VC();
	TestIfIfElseIf_CV();
	TestIfIfElseIf_VV();
	TestIfIfElseIf_CC();
	return;
}

RunIfElseIfElseTests();