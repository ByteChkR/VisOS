#include "VisOS.Driver/benchmark_device.vhl"

string(bench_name, "CounterTest_");
string(bench_100, "100");
string(bench_1000, "1000");
string(bench_10000, "10000");
string(bench_100000, "100000");
string(bench_1000000, "1000000");

private void CountTo(var max)
{
	var i = 0;
	while ( i < max )
	{
		i++;
	}
	return;
}

private void To100()
{
	BENCH_ClearName();
	BENCH_SetName(&bench_name, size_of(bench_name));
	BENCH_SetName(&bench_100, size_of(bench_100));
	BENCH_Run();
	CountTo(100);
	BENCH_End();
	return;
}

private void To1000()
{
	BENCH_ClearName();
	BENCH_SetName(&bench_name, size_of(bench_name));
	BENCH_SetName(&bench_1000, size_of(bench_1000));
	BENCH_Run();
	CountTo(1000);
	BENCH_End();
	return;
}

private void To10000()
{
	BENCH_ClearName();
	BENCH_SetName(&bench_name, size_of(bench_name));
	BENCH_SetName(&bench_10000, size_of(bench_10000));
	BENCH_Run();
	CountTo(10000);
	BENCH_End();
	return;
}

private void To100000()
{
	BENCH_ClearName();
	BENCH_SetName(&bench_name, size_of(bench_name));
	BENCH_SetName(&bench_100000, size_of(bench_100000));
	BENCH_Run();
	CountTo(100000);
	BENCH_End();
	return;
}

private void To1000000()
{
	BENCH_ClearName();
	BENCH_SetName(&bench_name, size_of(bench_name));
	BENCH_SetName(&bench_1000000, size_of(bench_1000000));
	BENCH_Run();
	CountTo(1000000);
	BENCH_End();
	return;
}

public void RunCounterBenchmarks()
{
	To100();
	To1000();
	To10000();
	To100000();
	To1000000();
	return;
}